<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>DocketSpringBoot</groupId>
	<artifactId>DocketSpringBoot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources></resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/dependency</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<excludes>
						<exclude>**/*.epl</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- For this plugin use this goal -> clean compile assembly:single -->
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>com.ebay.BigbrotherApplication</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>

					</archive>
					<descriptors>
						<descriptor>src/main/assembly/src.xml</descriptor>
					</descriptors>
					<finalName>bigbrother</finalName>
				</configuration>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>com.spotify</groupId> -->
			<!-- <artifactId>docker-maven-plugin</artifactId> -->
			<!-- <version>0.4.13</version> -->
			<!-- <configuration> -->
			<!-- <imageName>${docker.image.prefix}/${project.artifactId}</imageName> -->
			<!-- <dockerDirectory>src/main/docker</dockerDirectory> -->
			<!-- <resources> -->
			<!-- <resource> -->
			<!-- <targetPath>/</targetPath> -->
			<!-- <directory>${project.build.directory}</directory> -->
			<!-- <include>${project.build.finalName}.jar</include> -->
			<!-- </resource> -->
			<!-- </resources> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>io.fabric8</groupId> -->
			<!-- <artifactId>docker-maven-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <images> -->
			<!-- <image> -->
			<!-- <name>nneema/spectra</name> -->
			<!-- <build> -->
			<!-- <from>openjdk:latest</from> -->
			<!-- <assembly> -->
			<!-- <descriptorRef>artifact</descriptorRef> -->
			<!-- </assembly> -->
			<!-- <cmd>java -jar maven/${project.name}-${project.version}.jar</cmd> -->
			<!-- </build> -->
			<!-- <run> -->
			<!-- <wait> <log>Hello World!</log> </wait> -->
			<!-- </run> -->
			<!-- </image> -->
			<!-- </images> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>docker:start</id> -->
			<!-- <phase>install</phase> -->
			<!-- <goals> -->
			<!-- <goal>run</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
		</plugins>
	</build>
</project>